(function(t,u){typeof exports=="object"&&typeof module<"u"?u(exports):typeof define=="function"&&define.amd?define(["exports"],u):(t=typeof globalThis<"u"?globalThis:t||self,u(t.TracespaceIdentifyLayers={}))})(this,function(t){"use strict";function u(c){let d=null,h=0;const m={};for(const s of c){const{cad:E}=s;if(E!==null){const L=(m[E]??0)+1;L>h&&(h=L,d=E),m[E]=L}}return d}const y="copper",D="soldermask",C="silkscreen",g="solderpaste",T="drill",P="outline",k="drawing",A="top",x="bottom",I="inner",f="all",e="kicad",i="altium",S="allegro",p="eagle",a="eagle-legacy",o="eagle-oshpark",n="eagle-pcbng",r="geda-pcb",l="orcad",_="diptrace",b=[{type:null,side:null,matchers:[{ext:"gpi",cad:[p,a,o,n]},{ext:"dri",cad:[p,a,o,n]},{ext:"csv",cad:null},{match:/pnp_bom/,cad:n}]},{type:y,side:A,matchers:[{ext:"cmp",cad:a},{ext:"top",cad:[a,l]},{ext:"gtl",cad:[e,i]},{ext:"toplayer\\.ger",cad:o},{match:/top\.\w+$/,cad:[r,_]},{match:/f[._]cu/,cad:e},{match:/copper_top/,cad:p},{match:/top_copper/,cad:n},{match:/top copper/,cad:null}]},{type:D,side:A,matchers:[{ext:"stc",cad:a},{ext:"tsm",cad:a},{ext:"gts",cad:[e,i]},{ext:"smt",cad:l},{ext:"topsoldermask\\.ger",cad:o},{match:/topmask\.\w+$/,cad:[r,_]},{match:/f[._]mask/,cad:e},{match:/soldermask_top/,cad:p},{match:/top_mask/,cad:n},{match:/top solder resist/,cad:null}]},{type:C,side:A,matchers:[{ext:"plc",cad:a},{ext:"tsk",cad:a},{ext:"gto",cad:[e,i]},{ext:"sst",cad:l},{ext:"topsilkscreen\\.ger",cad:o},{match:/topsilk\.\w+$/,cad:[r,_]},{match:/f[._]silks/,cad:e},{match:/silkscreen_top/,cad:p},{match:/top_silk/,cad:n},{match:/top silk screen/,cad:null}]},{type:g,side:A,matchers:[{ext:"crc",cad:a},{ext:"tsp",cad:a},{ext:"gtp",cad:[e,i]},{ext:"spt",cad:l},{ext:"tcream\\.ger",cad:o},{match:/toppaste\.\w+$/,cad:[r,_]},{match:/f[._]paste/,cad:e},{match:/solderpaste_top/,cad:p},{match:/top_paste/,cad:n}]},{type:y,side:x,matchers:[{ext:"sol",cad:a},{ext:"bot",cad:[a,l]},{ext:"gbl",cad:[e,i]},{ext:"bottomlayer\\.ger",cad:o},{match:/bottom\.\w+$/,cad:[r,_]},{match:/b[._]cu/,cad:e},{match:/copper_bottom/,cad:p},{match:/bottom_copper/,cad:n},{match:/bottom copper/,cad:null}]},{type:D,side:x,matchers:[{ext:"sts",cad:a},{ext:"bsm",cad:a},{ext:"gbs",cad:[e,i]},{ext:"smb",cad:l},{ext:"bottomsoldermask\\.ger",cad:o},{match:/bottommask\.\w+$/,cad:[r,_]},{match:/b[._]mask/,cad:e},{match:/soldermask_bottom/,cad:p},{match:/bottom_mask/,cad:n},{match:/bottom solder resist/,cad:null}]},{type:C,side:x,matchers:[{ext:"pls",cad:a},{ext:"bsk",cad:a},{ext:"gbo",cad:[e,i]},{ext:"ssb",cad:l},{ext:"bottomsilkscreen\\.ger",cad:o},{match:/bottomsilk\.\w+$/,cad:[r,_]},{match:/b[._]silks/,cad:e},{match:/silkscreen_bottom/,cad:p},{match:/bottom_silk/,cad:n},{match:/bottom silk screen/,cad:null}]},{type:g,side:x,matchers:[{ext:"crs",cad:a},{ext:"bsp",cad:a},{ext:"gbp",cad:[e,i]},{ext:"spb",cad:l},{ext:"bcream\\.ger",cad:o},{match:/bottompaste\.\w+$/,cad:[r,_]},{match:/b[._]paste/,cad:e},{match:/solderpaste_bottom/,cad:p},{match:/bottom_paste/,cad:n}]},{type:y,side:I,matchers:[{ext:"ly\\d+",cad:a},{ext:"gp?\\d+",cad:[e,i]},{ext:"in\\d+",cad:l},{ext:"internalplane\\d+\\.ger",cad:o},{match:/in(?:ner)?\d+[._]cu/,cad:e},{match:/inner/,cad:_}]},{type:P,side:f,matchers:[{ext:"dim",cad:a},{ext:"mil",cad:a},{ext:"gml",cad:a},{ext:"gm\\d+",cad:[e,i]},{ext:"gko",cad:i},{ext:"fab",cad:l},{ext:"drd",cad:l},{match:/outline/,cad:[r,n]},{match:/boardoutline/,cad:[o,_]},{match:/edge[._]cuts/,cad:e},{match:/profile/,cad:p},{match:/mechanical \d+/,cad:null}]},{type:T,side:f,matchers:[{ext:"txt",cad:[a,i]},{ext:"xln",cad:[p,a,o]},{ext:"exc",cad:a},{ext:"drd",cad:a},{ext:"drl",cad:[e,_]},{ext:"tap",cad:l},{ext:"npt",cad:l},{ext:"plated-drill\\.cnc",cad:r},{match:/fab/,cad:r},{match:/npth/,cad:e},{match:/drill/,cad:n}]},{type:k,side:null,matchers:[{ext:"pos",cad:e},{ext:"art",cad:S},{ext:"gbr",cad:null},{ext:"gbx",cad:null},{ext:"ger",cad:null},{ext:"pho",cad:null}]}],R=b.flatMap(c=>c.matchers.flatMap(d=>{const h=Array.isArray(d.cad)?d.cad:[d.cad],m="ext"in d?new RegExp("\\."+d.ext+"$","i"):new RegExp(d.match,"i");return h.map(s=>({type:c.type,side:c.side,match:m,cad:s}))}));function O(c){return R.map(d=>d.match.test(c)?{...d,filename:c}:null).filter(d=>d!==null)}function G(c){typeof c=="string"&&(c=[c]);const d=c.flatMap(m=>O(m)),h=u(d);return Object.fromEntries(c.map(m=>{const s=N(d,m,h),E=s?{type:s.type,side:s.side}:{type:null,side:null};return[m,E]}))}function Y(){return b.map(c=>({type:c.type,side:c.side})).filter(c=>c.type!==null)}function M(c){const d=b.some(s=>s.side===c.side&&s.type===c.type),h=b.some(s=>s.side===c.side),m=b.some(s=>s.type===c.type);return{valid:d,side:h?c.side:null,type:m?c.type:null}}function N(c,d,h){const m=c.filter(E=>E.filename===d);return m.find(E=>E.cad===h)??m[0]??null}t.CAD_ALLEGRO=S,t.CAD_ALTIUM=i,t.CAD_DIPTRACE=_,t.CAD_EAGLE=p,t.CAD_EAGLE_LEGACY=a,t.CAD_EAGLE_OSHPARK=o,t.CAD_EAGLE_PCBNG=n,t.CAD_GEDA_PCB=r,t.CAD_KICAD=e,t.CAD_ORCAD=l,t.SIDE_ALL=f,t.SIDE_BOTTOM=x,t.SIDE_INNER=I,t.SIDE_TOP=A,t.TYPE_COPPER=y,t.TYPE_DRAWING=k,t.TYPE_DRILL=T,t.TYPE_OUTLINE=P,t.TYPE_SILKSCREEN=C,t.TYPE_SOLDERMASK=D,t.TYPE_SOLDERPASTE=g,t.getAllLayers=Y,t.identifyLayers=G,t.validate=M,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=tracespace-identify-layers.umd.cjs.map
